pipeline {
  agent any

   stages {
    stage('Unit test') {

      steps {  
        echo 'Testing..' 
      	  
      }
    }
  
    stage('Analyse sonar') {

      steps {
        echo 'Analyse sonar'
        script {
            def scannerHome = tool 'SONAR_SCANNER_4.8';
            withSonarQubeEnv('SONAR_LOCAL') {
                sh "${scannerHome}/bin/sonar-scanner"
            }
        }

      }
    }

    stage("Quality Gate") {
            steps {
            script {
                timeout(time: 1, unit: 'HOURS') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        unstable "Pipeline aborted due to quality gate failure: ${qg.status}"
                    }
                }
            }
            }
        }
  
 
    
  }
}

